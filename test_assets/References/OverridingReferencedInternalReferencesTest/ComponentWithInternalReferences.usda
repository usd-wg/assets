#usda 1.0
(
    defaultPrim = "World"
    endTimeCode = 100
    metersPerUnit = 0.01
    startTimeCode = 0
    subLayers = [
        @../utils/Environment.usda@
    ]
    timeCodesPerSecond = 24
    upAxis = "Z"
)

def Xform "World" (
    kind = "component"
)
{
    double3 xformOp:rotateXYZ = (0, 0, -90)
    double3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

    def Scope "Looks"
    {
        def Material "steel"
        {
            token outputs:displacement.connect = </World/Looks/steel/Shader.outputs:displacement>
            token outputs:surface.connect = </World/Looks/steel/Shader.outputs:surface>

            def Shader "Shader"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    hidden = false
                )
                float inputs:clearcoatRoughness = 0.01 (
                    customData = {
                        float default = 0.01
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    hidden = false
                )
                color3f inputs:diffuseColor = (1, 0.9725508, 0.9207921) (
                    customData = {
                        float3 default = (0.18, 0.18, 0.18)
                    }
                    hidden = false
                    renderType = "color"
                )
                float inputs:displacement = 0 (
                    customData = {
                        float default = 0
                    }
                    hidden = false
                )
                color3f inputs:emissiveColor = (0, 0, 0) (
                    customData = {
                        float3 default = (0, 0, 0)
                    }
                    hidden = false
                    renderType = "color"
                )
                float inputs:ior = 1.5 (
                    customData = {
                        float default = 1.5
                        dictionary range = {
                            float max = 3.4028235e38
                            float min = 0
                        }
                        dictionary soft_range = {
                            float max = 5
                            float min = 1
                        }
                    }
                    hidden = false
                )
                float inputs:metallic = 1 (
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    hidden = false
                )
                normal3f inputs:normal = (0, 0, 1) (
                    customData = {
                        float3 default = (0, 0, 1)
                        dictionary range = {
                            float3 max = (1, 1, 1)
                            float3 min = (-1, -1, -1)
                        }
                    }
                    hidden = false
                )
                float inputs:opacity = 1 (
                    customData = {
                        float default = 1
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    hidden = false
                )
                float inputs:opacityThreshold = 0 (
                    connectability = "interfaceOnly"
                    customData = {
                        float default = 0
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    hidden = false
                )
                float inputs:roughness = 0.26999998 (
                    customData = {
                        float default = 0.5
                        dictionary range = {
                            float max = 1
                            float min = 0
                        }
                    }
                    hidden = false
                )
                color3f inputs:specularColor = (0, 0, 0) (
                    customData = {
                        float3 default = (0, 0, 0)
                    }
                    hidden = false
                    renderType = "color"
                )
                int inputs:useSpecularWorkflow = 0 (
                    connectability = "interfaceOnly"
                    customData = {
                        int default = 0
                        dictionary range = {
                            int max = 1
                            int min = 0
                        }
                        string widgetType = "checkBox"
                    }
                    hidden = false
                )
                token outputs:displacement (
                    renderType = "material"
                )
                token outputs:surface (
                    renderType = "material"
                )
            }
        }
    }

    class Scope "Prefabs"
    {
        def Xform "bolt" (
            kind = "subcomponent"
        )
        {
            custom string userProperties:blenderName:object = "bolt"
            float3 xformOp:rotateXYZ = (0, 0, 0)
            float3 xformOp:scale = (100, 100, 100)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

            def Mesh "bolt" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float3[] extent = [(-0.015267535, -0.017632386, -0.013132782), (0.015269997, 0.01762932, 0.014354522)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 3, 4, 4, 4, 4, 4, 4, 3, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [44, 42, 4, 26, 100, 97, 6, 27, 129, 118, 40, 101, 88, 85, 8, 28, 20, 26, 39, 38, 76, 73, 10, 29, 3, 20, 38, 0, 64, 62, 12, 30, 54, 52, 2, 25, 74, 98, 16, 15, 98, 93, 17, 16, 69, 86, 13, 18, 93, 69, 18, 17, 86, 81, 14, 13, 13, 14, 138, 139, 51, 53, 19, 1, 61, 63, 24, 11, 72, 75, 23, 9, 84, 87, 22, 7, 96, 99, 21, 5, 41, 43, 20, 3, 53, 54, 25, 19, 63, 64, 30, 24, 75, 76, 29, 23, 87, 88, 28, 22, 99, 100, 27, 21, 43, 44, 26, 20, 120, 113, 31, 47, 122, 114, 36, 57, 128, 116, 33, 91, 118, 112, 32, 40, 124, 117, 35, 67, 126, 115, 34, 79, 135, 0, 96, 130, 26, 4, 37, 39, 112, 119, 45, 32, 49, 50, 44, 43, 48, 49, 43, 41, 135, 41, 3, 50, 46, 42, 44, 25, 2, 46, 50, 131, 84, 7, 1, 19, 49, 48, 19, 25, 50, 49, 119, 120, 47, 45, 113, 121, 55, 31, 59, 60, 54, 53, 58, 59, 53, 51, 130, 96, 5, 60, 56, 52, 54, 30, 12, 56, 60, 132, 72, 9, 11, 24, 59, 58, 24, 30, 60, 59, 121, 122, 57, 55, 114, 123, 65, 36, 70, 71, 64, 63, 68, 70, 63, 61, 150, 148, 147, 142, 71, 66, 62, 64, 29, 10, 66, 71, 133, 61, 11, 9, 23, 70, 68, 23, 29, 71, 70, 123, 124, 67, 65, 117, 125, 77, 35, 82, 83, 76, 75, 80, 82, 75, 72, 152, 151, 143, 144, 83, 78, 73, 76, 28, 8, 78, 83, 135, 130, 74, 81, 7, 22, 82, 80, 22, 28, 83, 82, 125, 126, 79, 77, 115, 127, 89, 34, 94, 95, 88, 87, 92, 94, 87, 84, 17, 18, 140, 141, 95, 90, 85, 88, 27, 6, 90, 95, 81, 74, 15, 14, 5, 21, 94, 92, 21, 27, 95, 94, 127, 128, 91, 89, 38, 39, 100, 99, 0, 38, 99, 96, 16, 17, 141, 136, 116, 129, 101, 33, 39, 37, 97, 100, 31, 55, 102, 47, 55, 57, 107, 102, 57, 36, 65, 107, 47, 102, 103, 45, 102, 107, 108, 103, 107, 65, 67, 108, 45, 103, 104, 32, 103, 108, 109, 104, 108, 67, 35, 109, 32, 104, 105, 40, 104, 109, 110, 105, 109, 35, 77, 110, 40, 105, 106, 101, 105, 110, 111, 106, 110, 77, 79, 111, 101, 106, 91, 33, 106, 111, 89, 91, 111, 79, 34, 89, 6, 97, 129, 116, 85, 90, 128, 127, 8, 85, 127, 115, 73, 78, 126, 125, 10, 73, 125, 117, 62, 66, 124, 123, 12, 62, 123, 114, 52, 56, 122, 121, 2, 52, 121, 113, 42, 46, 120, 119, 4, 42, 119, 112, 78, 8, 115, 126, 66, 10, 117, 124, 37, 4, 112, 118, 90, 6, 116, 128, 56, 12, 114, 122, 46, 2, 113, 120, 97, 37, 118, 129, 134, 48, 41, 135, 5, 92, 130, 84, 131, 130, 92, 7, 80, 131, 72, 132, 131, 80, 9, 68, 132, 61, 133, 132, 68, 11, 58, 133, 148, 153, 146, 147, 1, 48, 134, 15, 16, 136, 137, 3, 0, 135, 149, 152, 144, 145, 51, 134, 133, 58, 14, 15, 137, 138, 18, 13, 139, 140, 153, 149, 145, 146, 151, 150, 142, 143, 134, 51, 1, 134, 135, 81, 86, 132, 133, 69, 93, 133, 134, 86, 69, 131, 132, 93, 98, 130, 131, 98, 74, 145, 144, 143, 146, 146, 143, 142, 147, 141, 140, 150, 151, 138, 137, 149, 153, 137, 136, 152, 149, 139, 138, 153, 148, 136, 141, 151, 152, 140, 139, 148, 150]
                rel material:binding = </World/Prefabs/bolt/Looks/copper> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                normal3f[] normals = [(0.49999985, 0.86602545, 0), (0.49999985, 0.86602545, 0), (0.49999985, 0.86602545, 0), (0.49999985, 0.86602545, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1.3242104e-7, 0, 0.99999994), (-1.3242104e-7, 0, 0.99999994), (-1.3242104e-7, 0, 0.99999994), (-1.3242104e-7, 0, 0.99999994), (0.5000004, -0.8660252, 0), (0.5000004, -0.8660252, 0), (0.5000004, -0.8660252, 0), (0.5000004, -0.8660252, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (-0.50000215, -0.8660242, 0), (-0.50000215, -0.8660242, 0), (-0.50000215, -0.8660242, 0), (-0.50000215, -0.8660242, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.5000001, 0.8660253, 0), (-0.5000001, 0.8660253, 0), (-0.5000001, 0.8660253, 0), (-0.5000001, 0.8660253, 0), (9.4299946e-7, 0, -1), (9.4299946e-7, 0, -1), (9.4299946e-7, 0, -1), (9.4299946e-7, 0, -1), (-9.4299946e-7, 0, -1), (-9.4299946e-7, 0, -1), (-9.4299946e-7, 0, -1), (-9.4299946e-7, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-9.4299946e-7, 0, -1), (-9.4299946e-7, 0, -1), (-9.4299946e-7, 0, -1), (-9.4299946e-7, 0, -1), (-3.9379913e-7, 0.54470474, -0.83862793), (0.4717279, 0.2723524, -0.838628), (0.86602545, 0.49999997, 0), (0, 1, 0), (-0.5000004, 0.86602515, 0), (-0.5000004, 0.86602515, 0), (-0.5000004, 0.86602515, 0), (-0.5000004, 0.86602515, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.50000143, -0.86602455, 0), (-0.50000143, -0.86602455, 0), (-0.50000143, -0.86602455, 0), (-0.50000143, -0.86602455, 0), (0.5000006, -0.86602503, 0), (0.5000006, -0.86602503, 0), (0.5000006, -0.86602503, 0), (0.5000006, -0.86602503, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.49999964, 0.86602557, 0), (0.49999964, 0.86602557, 0), (0.49999964, 0.86602557, 0), (0.49999964, 0.86602557, 0), (-0.49999973, 0.8660255, 0), (-0.49999973, 0.8660255, 0), (-0.49999973, 0.8660255, 0), (-0.49999973, 0.8660255, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.50000215, -0.8660241, 0), (-0.50000215, -0.8660241, 0), (-0.50000215, -0.8660241, 0), (-0.50000215, -0.8660241, 0), (0.5000006, -0.8660251, 0), (0.5000006, -0.8660251, 0), (0.5000006, -0.8660251, 0), (0.5000006, -0.8660251, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.49999985, 0.8660255, 0), (0.49999985, 0.8660255, 0), (0.49999985, 0.8660255, 0), (0.49999985, 0.8660255, 0), (0.000001439834, 0, 1), (0.000001439834, 0, 1), (0.000001439834, 0, 1), (0.000001439834, 0, 1), (3.0585042e-7, 0, 1), (3.0585042e-7, 0, 1), (3.0585042e-7, 0, 1), (3.0585042e-7, 0, 1), (0.0000042769866, 0, 1), (0.0000042769866, 0, 1), (0.0000042769866, 0, 1), (0.0000042769866, 0, 1), (0.0000027986198, 0, 1), (0.0000027986198, 0, 1), (0.0000027986198, 0, 1), (0.0000027986198, 0, 1), (0.0000023486434, 0, 1), (0.0000023486434, 0, 1), (0.0000023486434, 0, 1), (0.0000023486434, 0, 1), (-0.000004117846, 0, 1), (-0.000004117846, 0, 1), (-0.000004117846, 0, 1), (-0.000004117846, 0, 1), (6.960067e-8, 0, -1), (6.960067e-8, 0, -1), (6.960067e-8, 0, -1), (6.960067e-8, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-7.5761864e-7, 0, 1), (-7.5761864e-7, 0, 1), (-7.5761864e-7, 0, 1), (-7.5761864e-7, 0, 1), (0.49999997, 0.86602545, 0), (0.49999997, 0.86602545, 0), (0.49999997, 0.86602545, 0), (0.49999997, 0.86602545, 0), (0.4999995, 0.86602575, 0), (0.4999995, 0.86602575, 0), (0.4999995, 0.86602575, 0), (0.4999995, 0.86602575, 0), (7.737696e-8, 0, -1), (7.737696e-8, 0, -1), (7.737696e-8, 0, -1), (0.49999946, 0.8660256, 0), (0.49999946, 0.8660256, 0), (0.49999946, 0.8660256, 0), (0.49999946, 0.8660256, 0), (0.50000006, 0.8660254, 0), (0.50000006, 0.8660254, 0), (0.50000006, 0.8660254, 0), (0.50000006, 0.8660254, 0), (-3.2886788e-7, 0, -1), (-3.2886788e-7, 0, -1), (-3.2886788e-7, 0, -1), (0.4999998, 0.8660255, 0), (0.4999998, 0.8660255, 0), (0.4999998, 0.8660255, 0), (0.4999998, 0.8660255, 0), (0.49999973, 0.86602557, 0), (0.49999973, 0.86602557, 0), (0.49999973, 0.86602557, 0), (0.49999973, 0.86602557, 0), (-6.83961e-8, 0, 1), (-6.83961e-8, 0, 1), (-6.83961e-8, 0, 1), (-6.83961e-8, 0, 1), (0.0000037652853, 0, 1), (0.0000037652853, 0, 1), (0.0000037652853, 0, 1), (0.0000037652853, 0, 1), (-0.5, 0.86602545, 0), (-0.5, 0.86602545, 0), (-0.5, 0.86602545, 0), (-0.5, 0.86602545, 0), (-0.4999999, 0.8660255, 0), (-0.4999999, 0.8660255, 0), (-0.4999999, 0.8660255, 0), (-0.4999999, 0.8660255, 0), (5.0961336e-7, 0, -1), (5.0961336e-7, 0, -1), (5.0961336e-7, 0, -1), (-0.49999964, 0.8660256, 0), (-0.49999964, 0.8660256, 0), (-0.49999964, 0.8660256, 0), (-0.49999964, 0.8660256, 0), (-0.49999973, 0.8660255, 0), (-0.49999973, 0.8660255, 0), (-0.49999973, 0.8660255, 0), (-0.49999973, 0.8660255, 0), (2.0125843e-7, 0, -1), (2.0125843e-7, 0, -1), (2.0125843e-7, 0, -1), (-0.5000003, 0.8660253, 0), (-0.5000003, 0.8660253, 0), (-0.5000003, 0.8660253, 0), (-0.5000003, 0.8660253, 0), (-0.5, 0.8660254, 0), (-0.5, 0.8660254, 0), (-0.5, 0.8660254, 0), (-0.5, 0.8660254, 0), (-6.667382e-8, 0, 0.99999994), (-6.667382e-8, 0, 0.99999994), (-6.667382e-8, 0, 0.99999994), (-6.667382e-8, 0, 0.99999994), (-0.0000011854397, 0, 1), (-0.0000011854397, 0, 1), (-0.0000011854397, 0, 1), (-0.0000011854397, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.8660253, 0.50000024, 0), (0, 1, 0), (5.8485327e-8, 0.792406, -0.609994), (-0.6862432, 0.39620325, -0.60999435), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-6.889777e-8, 0, 1), (-6.889777e-8, 0, 1), (-6.889777e-8, 0, 1), (-6.889777e-8, 0, 1), (-0.0000020134173, 0, 1), (-0.0000020134173, 0, 1), (-0.0000020134173, 0, 1), (-0.0000020134173, 0, 1), (-0.5, -0.8660254, 0), (-0.5, -0.8660254, 0), (-0.5, -0.8660254, 0), (-0.5, -0.8660254, 0), (-0.50000006, -0.8660254, 0), (-0.50000006, -0.8660254, 0), (-0.50000006, -0.8660254, 0), (-0.50000006, -0.8660254, 0), (0, -1, 0), (-0.86602545, -0.49999997, 0), (-0.6862436, -0.39620286, -0.60999423), (-5.848537e-8, -0.7924057, -0.60999435), (-0.5, -0.8660255, 0), (-0.5, -0.8660255, 0), (-0.5, -0.8660255, 0), (-0.5, -0.8660255, 0), (-0.5000016, -0.8660245, 0), (-0.5000016, -0.8660245, 0), (-0.5000016, -0.8660245, 0), (-0.5000016, -0.8660245, 0), (-1.45604e-7, 0, -1), (-1.45604e-7, 0, -1), (-1.45604e-7, 0, -1), (-1.45604e-7, 0, -1), (-0.5000022, -0.8660241, 0), (-0.5000022, -0.8660241, 0), (-0.5000022, -0.8660241, 0), (-0.5000022, -0.8660241, 0), (-0.5000019, -0.86602426, 0), (-0.5000019, -0.86602426, 0), (-0.5000019, -0.86602426, 0), (-0.5000019, -0.86602426, 0), (-6.611191e-8, 0, 1), (-6.611191e-8, 0, 1), (-6.611191e-8, 0, 1), (-6.611191e-8, 0, 1), (-0.000003826708, 0, 1), (-0.000003826708, 0, 1), (-0.000003826708, 0, 1), (-0.000003826708, 0, 1), (0.5000001, -0.8660253, 0), (0.5000001, -0.8660253, 0), (0.5000001, -0.8660253, 0), (0.5000001, -0.8660253, 0), (0.5000003, -0.86602527, 0), (0.5000003, -0.86602527, 0), (0.5000003, -0.86602527, 0), (0.5000003, -0.86602527, 0), (-0.47172847, -0.2723524, -0.83862776), (-0.47172818, 0.27235234, -0.8386278), (-0.86602545, 0.49999997, 0), (-0.86602545, -0.50000006, 0), (0.5000003, -0.8660252, 0), (0.5000003, -0.8660252, 0), (0.5000003, -0.8660252, 0), (0.5000003, -0.8660252, 0), (0.50000095, -0.8660248, 0), (0.50000095, -0.8660248, 0), (0.50000095, -0.8660248, 0), (0.50000095, -0.8660248, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.50000185, -0.8660243, 0), (0.50000185, -0.8660243, 0), (0.50000185, -0.8660243, 0), (0.50000185, -0.8660243, 0), (0.50000125, -0.86602473, 0), (0.50000125, -0.86602473, 0), (0.50000125, -0.86602473, 0), (0.50000125, -0.86602473, 0), (6.59547e-8, 0, 0.99999994), (6.59547e-8, 0, 0.99999994), (6.59547e-8, 0, 0.99999994), (6.59547e-8, 0, 0.99999994), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -0.5447049, -0.8386278), (-0.47172847, -0.2723524, -0.83862776), (-0.86602545, -0.50000006, 0), (0, -0.99999994, 0), (-0.0000032541745, 0, 1), (-0.0000032541745, 0, 1), (-0.0000032541745, 0, 1), (-0.0000032541745, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (-0.0000029034888, 0, -1), (-0.0000029034888, 0, -1), (-0.0000029034888, 0, -1), (-0.0000029034888, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.000001148238, 0, 1), (-0.000001148238, 0, 1), (-0.000001148238, 0, 1), (-0.000001148238, 0, 1), (1.8996991e-7, 0, 1), (1.8996991e-7, 0, 1), (1.8996991e-7, 0, 1), (1.8996991e-7, 0, 1), (-0.0000022735555, 0, 0.99999994), (-0.0000022735555, 0, 0.99999994), (-0.0000022735555, 0, 0.99999994), (-0.0000022735555, 0, 0.99999994), (0.0000035023204, -0.0000021650387, 1), (0.0000035023204, -0.0000021650387, 1), (0.0000035023204, -0.0000021650387, 1), (0.0000035023204, -0.0000021650387, 1), (0.0000026534667, -0.0000016967545, 1), (0.0000026534667, -0.0000016967545, 1), (0.0000026534667, -0.0000016967545, 1), (0.0000026534667, -0.0000016967545, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0000045370994, 0.000002285573, 0.99999994), (-0.0000045370994, 0.000002285573, 0.99999994), (-0.0000045370994, 0.000002285573, 0.99999994), (-0.0000045370994, 0.000002285573, 0.99999994), (0, 0.000002238637, 0.99999994), (0, 0.000002238637, 0.99999994), (0, 0.000002238637, 0.99999994), (0, 0.000002238637, 0.99999994), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (5.902641e-7, 0, 1), (5.902641e-7, 0, 1), (5.902641e-7, 0, 1), (5.902641e-7, 0, 1), (-1.8251447e-7, 0, 1), (-1.8251447e-7, 0, 1), (-1.8251447e-7, 0, 1), (-1.8251447e-7, 0, 1), (-8.331322e-7, 0, 1), (-8.331322e-7, 0, 1), (-8.331322e-7, 0, 1), (-8.331322e-7, 0, 1), (0.0000021518404, 0, -1), (0.0000021518404, 0, -1), (0.0000021518404, 0, -1), (0.0000021518404, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.0000020777861, 0, -1), (0.0000020777861, 0, -1), (0.0000020777861, 0, -1), (0.0000020777861, 0, -1), (-5.764371e-7, 0, 1), (-5.764371e-7, 0, 1), (-5.764371e-7, 0, 1), (-5.764371e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.0000017359615, 0, 0.99999994), (0.0000017359615, 0, 0.99999994), (0.0000017359615, 0, 0.99999994), (0.0000017359615, 0, 0.99999994), (1.1710873e-7, 0, 1), (1.1710873e-7, 0, 1), (1.1710873e-7, 0, 1), (1.1710873e-7, 0, 1), (3.0353257e-7, 0, 1), (3.0353257e-7, 0, 1), (3.0353257e-7, 0, 1), (3.0353257e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (2.2103707e-7, 0, 1), (2.2103707e-7, 0, 1), (2.2103707e-7, 0, 1), (2.2103707e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.000001382747, 0, 1), (-0.000001382747, 0, 1), (-0.000001382747, 0, 1), (-0.000001382747, 0, 1), (1.2115488e-7, 0, 1), (1.2115488e-7, 0, 1), (1.2115488e-7, 0, 1), (1.2115488e-7, 0, 1), (2.3339535e-7, 0, 1), (2.3339535e-7, 0, 1), (2.3339535e-7, 0, 1), (2.3339535e-7, 0, 1), (-0.000001643771, 0, 1), (-0.000001643771, 0, 1), (-0.000001643771, 0, 1), (-0.000001643771, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (9.8391155e-8, 0, 1), (9.8391155e-8, 0, 1), (9.8391155e-8, 0, 1), (9.8391155e-8, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.0000028189534, 0, 0.99999994), (0.0000028189534, 0, 0.99999994), (0.0000028189534, 0, 0.99999994), (0.0000028189534, 0, 0.99999994), (-2.345668e-7, 0, 1), (-2.345668e-7, 0, 1), (-2.345668e-7, 0, 1), (-2.345668e-7, 0, 1), (-2.3651163e-8, 0, -1), (-2.3651163e-8, 0, -1), (-2.3651163e-8, 0, -1), (-2.3651163e-8, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-2.3146647e-8, 0, -1), (-2.3146647e-8, 0, -1), (-2.3146647e-8, 0, -1), (-2.3146647e-8, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (4.6359176e-8, 0, -1), (4.6359176e-8, 0, -1), (4.6359176e-8, 0, -1), (4.6359176e-8, 0, -1), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (2.3753007e-8, 0, -0.99999994), (2.3753007e-8, 0, -0.99999994), (2.3753007e-8, 0, -0.99999994), (2.3753007e-8, 0, -0.99999994), (-8.2109085e-7, 0, -1), (-8.2109085e-7, 0, -1), (-8.2109085e-7, 0, -1), (0, 1, 0), (0.8660253, 0.50000024, 0), (0.68624324, 0.39620325, -0.60999435), (5.8485327e-8, 0.792406, -0.609994), (-0.0000014240917, 0, -1), (-0.0000014240917, 0, -1), (-0.0000014240917, 0, -1), (0.47172847, -0.2723524, -0.83862776), (0, -0.5447049, -0.8386278), (0, -0.99999994, 0), (0.86602545, -0.50000006, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0.86602545, -0.49999997, 0), (0, -1, 0), (-5.848537e-8, -0.7924057, -0.60999435), (0.68624365, -0.39620292, -0.6099943), (2.3296822e-8, 0, -1), (2.3296822e-8, 0, -1), (2.3296822e-8, 0, -1), (2.3296822e-8, 0, -1), (0.4717279, 0.2723524, -0.838628), (0.47172847, -0.2723524, -0.83862776), (0.86602545, -0.50000006, 0), (0.86602545, 0.49999997, 0), (-0.47172818, 0.27235234, -0.8386278), (-3.9379913e-7, 0.54470474, -0.83862793), (0, 1, 0), (-0.86602545, 0.49999997, 0), (0.8660253, 0.50000024, 0), (0.86602545, -0.49999997, 0), (0.68624365, -0.39620292, -0.6099943), (0.68624324, 0.39620325, -0.60999435), (-0.86602545, -0.49999997, 0), (-0.8660253, 0.50000024, 0), (-0.6862432, 0.39620325, -0.60999435), (-0.6862436, -0.39620286, -0.60999423), (8.629047e-7, 0, -1), (8.629047e-7, 0, -1), (8.629047e-7, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1.4573979e-7, 0, -1), (1.4573979e-7, 0, -1), (1.4573979e-7, 0, -1), (1.4573979e-7, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (7.281633e-8, 0, -1), (7.281633e-8, 0, -1), (7.281633e-8, 0, -1), (7.281633e-8, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.68624365, -0.39620292, -0.6099943), (-5.848537e-8, -0.7924057, -0.60999435), (-0.6862436, -0.39620286, -0.60999423), (0.68624324, 0.39620325, -0.60999435), (0.68624324, 0.39620325, -0.60999435), (-0.6862436, -0.39620286, -0.60999423), (-0.6862432, 0.39620325, -0.60999435), (5.8485327e-8, 0.792406, -0.609994), (-0.86602545, -0.50000006, 0), (-0.86602545, 0.49999997, 0), (-0.8660253, 0.50000024, 0), (-0.86602545, -0.49999997, 0), (0.86602545, 0.49999997, 0), (0.86602545, -0.50000006, 0), (0.86602545, -0.49999997, 0), (0.8660253, 0.50000024, 0), (0.86602545, -0.50000006, 0), (0, -0.99999994, 0), (0, -1, 0), (0.86602545, -0.49999997, 0), (0, 1, 0), (0.86602545, 0.49999997, 0), (0.8660253, 0.50000024, 0), (0, 1, 0), (0, -0.99999994, 0), (-0.86602545, -0.50000006, 0), (-0.86602545, -0.49999997, 0), (0, -1, 0), (-0.86602545, 0.49999997, 0), (0, 1, 0), (0, 1, 0), (-0.8660253, 0.50000024, 0)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(0.015269997, 0.008045348, 0.0069556003), (0.0000012307436, 0.01762932, 0.0069556003), (0.0000012307436, 0.01762932, 0.014354522), (0.015269997, 0.008813895, 0.0069556003), (0.015269997, 0.008813895, 0.014354522), (0.015269997, -0.008816956, 0.0069556003), (0.015269997, -0.008816956, 0.014354522), (0.0000012307436, -0.017632386, 0.0069556003), (0.0000012307436, -0.017632386, 0.014354522), (-0.015267535, -0.008816956, 0.0069556003), (-0.015267535, -0.008816956, 0.014354522), (-0.015267535, 0.008813895, 0.0069556003), (-0.015267535, 0.008813895, 0.014354522), (0, 0.0076431683, 0.0069556003), (0.006619178, 0.0038215837, 0.0069556003), (0.006619178, -0.0038215849, 0.0069556003), (0, -0.0076431683, 0.0069556003), (-0.006619178, -0.0038215849, 0.0069556003), (-0.006619178, 0.0038215837, 0.0069556003), (0.0000012307436, 0.01762932, 0.0072385063), (0.015269997, 0.008813895, 0.0072385063), (0.015269997, -0.008816956, 0.0072385063), (0.0000012307436, -0.017632386, 0.0072385063), (-0.015267535, -0.008816956, 0.0072385063), (-0.015267535, 0.008813895, 0.0072385063), (0.0000012307436, 0.01762932, 0.013941463), (0.015269997, 0.008813895, 0.013941463), (0.015269997, -0.008816956, 0.013941463), (0.0000012307436, -0.017632386, 0.013941463), (-0.015267535, -0.008816956, 0.013941463), (-0.015267535, 0.008813895, 0.013941463), (0.0000012307436, 0.004193307, 0.014354522), (0.003634068, 0.0020958881, 0.014354522), (0.003634068, -0.0020989508, 0.014354522), (0.0000012307436, -0.004196371, 0.014354522), (-0.0036316067, -0.0020989508, 0.014354522), (-0.0036316067, 0.0020958881, 0.014354522), (0.015269997, 0.008045348, 0.014354522), (0.015269997, 0.008045348, 0.0072385063), (0.015269997, 0.008045348, 0.013941463), (0.003634068, 0.001913031, 0.014354522), (0.014386425, 0.009324025, 0.0069556003), (0.014386425, 0.009324025, 0.014354522), (0.014386425, 0.009324025, 0.0072385063), (0.014386425, 0.009324025, 0.013941463), (0.003423843, 0.0022172614, 0.014354522), (0.0007693628, 0.017185839, 0.014354522), (0.00018398935, 0.0040877913, 0.014354522), (0.0007693628, 0.017185839, 0.0069556003), (0.0007693628, 0.017185839, 0.0072385063), (0.0007693628, 0.017185839, 0.013941463), (-0.0006326107, 0.017263371, 0.0069556003), (-0.0006326107, 0.017263371, 0.014354522), (-0.0006326107, 0.017263371, 0.0072385063), (-0.0006326107, 0.017263371, 0.013941463), (-0.00014957662, 0.0041062385, 0.014354522), (-0.014601414, 0.00919848, 0.014354522), (-0.0034731189, 0.002187391, 0.014354522), (-0.014601414, 0.00919848, 0.0069556003), (-0.014601414, 0.00919848, 0.0072385063), (-0.014601414, 0.00919848, 0.013941463), (-0.015267535, 0.0077365898, 0.0069556003), (-0.015267535, 0.0077365898, 0.014354522), (-0.015267535, 0.0077365898, 0.0072385063), (-0.015267535, 0.0077365898, 0.013941463), (-0.0036316067, 0.0018395692, 0.014354522), (-0.015267535, -0.007872546, 0.014354522), (-0.0036316067, -0.0018742511, 0.014354522), (-0.015267535, -0.007872546, 0.0069556003), (-0.0068669165, 0.0039646155, 0.0069556003), (-0.015267535, -0.007872546, 0.0072385063), (-0.015267535, -0.007872546, 0.013941463), (-0.014588131, -0.009209212, 0.0069556003), (-0.014588131, -0.009209212, 0.014354522), (0.0068669165, -0.0039646165, 0.0069556003), (-0.014588131, -0.009209212, 0.0072385063), (-0.014588131, -0.009209212, 0.013941463), (-0.0034699582, -0.0021922786, 0.014354522), (-0.000500595, -0.017342655, 0.014354522), (-0.000118166674, -0.0041274363, 0.014354522), (-0.000500595, -0.017342655, 0.0069556003), (0.0068669165, 0.0039646155, 0.0069556003), (-0.000500595, -0.017342655, 0.0072385063), (-0.000500595, -0.017342655, 0.013941463), (0.00062489865, -0.01727231, 0.0069556003), (0.00062489865, -0.01727231, 0.014354522), (0, 0.007929232, 0.0069556003), (0.00062489865, -0.01727231, 0.0072385063), (0.00062489865, -0.01727231, 0.013941463), (0.0001496176, -0.0041107, 0.014354522), (0.014746012, -0.009119479, 0.014354522), (0.0035093985, -0.0021709288, 0.014354522), (0.014746012, -0.009119479, 0.0069556003), (-0.0068669165, -0.0039646165, 0.0069556003), (0.014746012, -0.009119479, 0.0072385063), (0.014746012, -0.009119479, 0.013941463), (0.015269997, -0.008197311, 0.0069556003), (0.015269997, -0.008197311, 0.014354522), (0, -0.007929232, 0.0069556003), (0.015269997, -0.008197311, 0.0072385063), (0.015269997, -0.008197311, 0.013941463), (0.003634068, -0.0019515209, 0.014354522), (-0.000033992124, 0.0045288717, 0.014354522), (0.0024266995, 0.0016722376, 0.014354522), (0.0025863475, 0.0014932298, 0.014354521), (0.002650177, 0.0013190082, 0.014354522), (0.003973847, -0.0023485294, 0.014354522), (-0.003911205, 0.0022738422, 0.014354522), (-0.0026507895, -0.0012658358, 0.014354522), (-0.0025689893, -0.0014832059, 0.014354522), (-0.0024471087, -0.0016252971, 0.014354522), (0.00008006073, -0.0046000965, 0.014354522), (0.010794738, 0.0062301033, 0.014354522), (0.0000012307436, 0.012461739, 0.014354522), (-0.010792279, 0.0062301033, 0.014354522), (0.0000012307436, -0.012464801, 0.014354522), (0.010794738, -0.0062331664, 0.014354522), (-0.010792279, -0.0062331664, 0.014354522), (0.010794738, 0.0056868163, 0.014354522), (0.010170139, 0.006590714, 0.014354522), (0.0005442241, 0.0121482415, 0.014354522), (-0.00044683248, 0.01220305, 0.014354522), (-0.010321396, 0.006501967, 0.014354522), (-0.010792277, 0.005468555, 0.014354522), (-0.010792279, -0.005565562, 0.014354522), (-0.010312006, -0.0065104514, 0.014354522), (-0.0003535105, -0.012259991, 0.014354522), (0.00044210223, -0.012210265, 0.014354522), (0.010424334, -0.006447019, 0.014354522), (0.010794738, -0.005795137, 0.014354522), (0.009509671, -0.0054912316, 0.0069556003), (0.0000012307436, -0.010980931, 0.0069556003), (-0.009507208, -0.0054912316, 0.0069556003), (-0.009507208, 0.005488168, 0.0069556003), (0.0000012307436, 0.010977868, 0.0069556003), (0.009509671, 0.005488168, 0.0069556003), (0, -0.0076431683, 0.0062813875), (0.006619178, -0.0038215849, 0.0062813875), (0.006619178, 0.0038215837, 0.0062813875), (0, 0.0076431683, 0.0062813875), (-0.006619178, 0.0038215837, 0.0062813875), (-0.006619178, -0.0038215849, 0.0062813875), (-0.006619178, 0.0038215837, -0.013132782), (-0.006619178, -0.0038215849, -0.013132782), (0, -0.0076431683, -0.013132782), (0.006619178, -0.0038215849, -0.013132782), (0.006619178, 0.0038215837, -0.013132782), (0, 0.0076431683, -0.013132782), (0, 0.0076431683, -0.012817473), (0.006619178, -0.0038215849, -0.012817473), (-0.006619178, 0.0038215837, -0.012817473), (-0.006619178, -0.0038215849, -0.012817473), (0, -0.0076431683, -0.012817473), (0.006619178, 0.0038215837, -0.012817473)]
                bool[] primvars:sharp_face = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0] (
                    interpolation = "uniform"
                )
                texCoord2f[] primvars:st = [(0.842978, 0.97208655), (0.84297794, 1), (0.8333333, 1), (0.83333325, 0.97208655), (0.6725242, 0.97208655), (0.6725242, 0.9999999), (0.6666666, 1), (0.6666666, 0.97208655), (0.45815143, 0.045447074), (0.45818213, 0.45623502), (0.45788267, 0.33150604), (0.45783997, 0.15915674), (0.50680757, 0.9720866), (0.5068075, 1), (0.49999994, 1), (0.49999994, 0.97208655), (0.8333333, 0.5191181), (0.83333325, 0.97208655), (0.82606816, 0.97208667), (0.8260683, 0.5191182), (0.3407493, 0.97208655), (0.34074932, 1), (0.33333325, 1), (0.33333325, 0.97208655), (0.8333333, 0.5), (0.8333333, 0.5191181), (0.8260683, 0.5191182), (0.8260683, 0.5), (0.17685048, 0.9720866), (0.1768505, 1), (0.16666658, 1), (0.16666657, 0.97208655), (0.006918624, 0.97208655), (0.0069186245, 1), (-8.940697e-8, 1), (-8.940697e-8, 0.9720865), (0.95245993, 0.13320422), (0.7500659, 0.016307713), (0.75, 0.010000005), (0.9578461, 0.13), (0.7500659, 0.016307713), (0.54768443, 0.13315324), (0.5421539, 0.13), (0.75, 0.010000005), (0.5474017, 0.36647204), (0.75000876, 0.48378393), (0.75, 0.49), (0.5421539, 0.37), (0.54768443, 0.13315324), (0.5474017, 0.36647204), (0.5421539, 0.37), (0.5421539, 0.13), (0.75000876, 0.48378393), (0.95233065, 0.36684838), (0.9578461, 0.37), (0.75, 0.49), (0.75, 0.49), (0.9578461, 0.37), (0.9578461, 0.37000003), (0.74999994, 0.48999995), (0.006918627, 0.5), (0.006918625, 0.5191181), (-8.940697e-8, 0.5191181), (-8.940697e-8, 0.5), (0.17685047, 0.5), (0.17685048, 0.5191181), (0.16666658, 0.5191181), (0.16666658, 0.5), (0.34074926, 0.5), (0.3407493, 0.519118), (0.33333325, 0.5191181), (0.33333325, 0.5), (0.50680745, 0.5), (0.50680757, 0.51911813), (0.49999994, 0.5191181), (0.49999994, 0.5), (0.6725242, 0.49999994), (0.6725242, 0.5191181), (0.6666666, 0.5191181), (0.6666666, 0.5), (0.8429779, 0.5), (0.8429779, 0.5191181), (0.8333333, 0.5191181), (0.8333333, 0.5), (0.006918625, 0.5191181), (0.006918624, 0.97208655), (-8.940697e-8, 0.9720865), (-8.940697e-8, 0.5191181), (0.17685048, 0.5191181), (0.17685048, 0.9720866), (0.16666657, 0.97208655), (0.16666658, 0.5191181), (0.3407493, 0.519118), (0.3407493, 0.97208655), (0.33333325, 0.97208655), (0.33333325, 0.5191181), (0.50680757, 0.51911813), (0.50680757, 0.9720866), (0.49999994, 0.97208655), (0.49999994, 0.5191181), (0.6725242, 0.5191181), (0.6725242, 0.97208655), (0.6666666, 0.97208655), (0.6666666, 0.5191181), (0.8429779, 0.5191181), (0.842978, 0.97208655), (0.83333325, 0.97208655), (0.8333333, 0.5191181), (0.19918323, 0.5207725), (0.22230878, 0.53939605), (0.25, 0.49), (0.27772036, 0.47398674), (-0.010954586, 0.34717217), (0.010889353, 0.3885752), (0.042153895, 0.37), (0.06878876, 0.38536987), (0.52961355, 0.17185657), (0.50062376, 0.07439297), (0.4578461, 0.13), (0.43245786, 0.11536034), (0.45818213, 0.45623502), (0.5164692, 0.36887103), (0.4578461, 0.37), (0.45788267, 0.33150604), (0.04250547, 0.019910902), (-0.017199073, 0.1350687), (0.042153895, 0.13), (0.04209689, 0.16326973), (0.32309312, -0.032927085), (0.24094474, -0.056260943), (0.25, 0.010000005), (0.22507687, 0.024398789), (0.9562439, 0.36931983), (0.9578532, 0.39244226), (0.9578872, 0.10329847), (0.95702314, 0.13108215), (0.83333325, 0.97208655), (0.8333333, 1), (0.82606816, 1), (0.82606816, 0.97208667), (0.5164692, 0.36887103), (0.51198274, 0.3399912), (0.42192322, 0.39081877), (0.4578461, 0.37), (0.99161553, 0.51911813), (0.9916154, 0.97208655), (0.842978, 0.97208655), (0.8429779, 0.5191181), (0.9916156, 0.5), (0.99161553, 0.51911813), (0.8429779, 0.5191181), (0.8429779, 0.5), (0.9562439, 0.36931983), (1.0022624, 0.3446206), (0.9578461, 0.37), (0.9916154, 0.97208655), (0.9916154, 0.99999994), (0.84297794, 1), (0.842978, 0.97208655), (1, 0.97208655), (1, 1), (0.9916154, 0.99999994), (0.9916154, 0.97208655), (0.7505551, 0.011501268), (0.7296834, -0.0017335453), (0.75, 0.010000005), (1, 0.5), (1, 0.5191181), (0.99161553, 0.51911813), (0.9916156, 0.5), (1, 0.5191181), (1, 0.97208655), (0.9916154, 0.97208655), (0.99161553, 0.51911813), (0.51198274, 0.3399912), (0.19918323, 0.5207725), (0.27772036, 0.47398674), (0.42192322, 0.39081877), (0.22230878, 0.53939605), (0.32571316, 0.53401035), (0.21746422, 0.47119805), (0.25, 0.49), (0.15939552, 0.5191181), (0.15939552, 0.97208655), (0.006918624, 0.97208655), (0.006918625, 0.5191181), (0.15939552, 0.5), (0.15939552, 0.5191181), (0.006918625, 0.5191181), (0.006918627, 0.5), (0.95702314, 0.13108215), (0.9578872, 0.10329847), (0.9578461, 0.13), (0.15939552, 0.97208655), (0.15939556, 1), (0.0069186245, 1), (0.006918624, 0.97208655), (0.16666657, 0.97208655), (0.16666658, 1), (0.15939556, 1), (0.15939552, 0.97208655), (0.5437373, 0.13025667), (0.50124776, 0.1535065), (0.5421539, 0.13), (0.16666658, 0.5), (0.16666658, 0.5191181), (0.15939552, 0.5191181), (0.15939552, 0.5), (0.16666658, 0.5191181), (0.16666657, 0.97208655), (0.15939552, 0.97208655), (0.15939552, 0.5191181), (0.32571316, 0.53401035), (-0.010954586, 0.34717217), (0.06878876, 0.38536987), (0.21746422, 0.47119805), (0.010889353, 0.3885752), (0.054906465, 0.35537413), (0.04216574, 0.32888913), (0.042153895, 0.37), (0.3244056, 0.5191181), (0.32440564, 0.9720866), (0.17685048, 0.9720866), (0.17685048, 0.5191181), (0.3244056, 0.5), (0.3244056, 0.5191181), (0.17685048, 0.5191181), (0.17685047, 0.5), (0.5421539, 0.37), (0.75, 0.49), (0.75, 0.49), (0.5421539, 0.37), (0.32440564, 0.9720866), (0.32440564, 1.0000001), (0.1768505, 1), (0.17685048, 0.9720866), (0.33333325, 0.97208655), (0.33333325, 1), (0.32440564, 1.0000001), (0.32440564, 0.9720866), (0.54221207, 0.3669112), (0.54214835, 0.40459013), (0.5421539, 0.37), (0.33333325, 0.5), (0.33333325, 0.5191181), (0.3244056, 0.5191181), (0.3244056, 0.5), (0.33333325, 0.5191181), (0.33333325, 0.97208655), (0.32440564, 0.9720866), (0.3244056, 0.5191181), (0.054906465, 0.35537413), (0.04250547, 0.019910902), (0.04209689, 0.16326973), (0.04216574, 0.32888913), (-0.017199073, 0.1350687), (-0.01603846, 0.16254188), (0.075561665, 0.11067184), (0.042153895, 0.13), (0.49452227, 0.5191181), (0.49452224, 0.9720866), (0.3407493, 0.97208655), (0.3407493, 0.519118), (0.49452227, 0.4999999), (0.49452227, 0.5191181), (0.3407493, 0.519118), (0.34074926, 0.5), (0.75, 0.010000005), (0.5421539, 0.13), (0.5421539, 0.13), (0.75, 0.010000005), (0.49452224, 0.9720866), (0.49452227, 1), (0.34074932, 1), (0.3407493, 0.97208655), (0.49999994, 0.97208655), (0.49999994, 1), (0.49452227, 1), (0.49452224, 0.9720866), (0.9562439, 0.36931983), (0.95702314, 0.13108215), (0.95245993, 0.13320422), (0.95233065, 0.36684838), (0.49999994, 0.5), (0.49999994, 0.5191181), (0.49452227, 0.5191181), (0.49452227, 0.4999999), (0.49999994, 0.5191181), (0.49999994, 0.97208655), (0.49452224, 0.9720866), (0.49452227, 0.5191181), (-0.01603846, 0.16254188), (0.32309312, -0.032927085), (0.22507687, 0.024398789), (0.075561665, 0.11067184), (0.24094474, -0.056260943), (0.1741734, -0.03386363), (0.28243956, 0.028744696), (0.25, 0.010000005), (0.6609471, 0.5191181), (0.6609471, 0.9720866), (0.50680757, 0.9720866), (0.50680757, 0.51911813), (0.660947, 0.5), (0.6609471, 0.5191181), (0.50680757, 0.51911813), (0.50680745, 0.5), (0.5421539, 0.13), (0.5421539, 0.37), (0.5421539, 0.37), (0.54215384, 0.13), (0.6609471, 0.9720866), (0.660947, 1), (0.5068075, 1), (0.50680757, 0.9720866), (0.6666666, 0.97208655), (0.6666666, 1), (0.660947, 1), (0.6609471, 0.9720866), (0.95233065, 0.36684838), (0.95245993, 0.13320422), (0.9578461, 0.13), (0.9578461, 0.37), (0.6666666, 0.5), (0.6666666, 0.5191181), (0.6609471, 0.5191181), (0.660947, 0.5), (0.6666666, 0.5191181), (0.6666666, 0.97208655), (0.6609471, 0.9720866), (0.6609471, 0.5191181), (0.1741734, -0.03386363), (0.52961355, 0.17185657), (0.43245786, 0.11536034), (0.28243956, 0.028744696), (0.8260683, 0.5191182), (0.82606816, 0.97208667), (0.6725242, 0.97208655), (0.6725242, 0.5191181), (0.8260683, 0.5), (0.8260683, 0.5191182), (0.6725242, 0.5191181), (0.6725242, 0.49999994), (0.75, 0.010000005), (0.5421539, 0.13), (0.54215384, 0.13), (0.75, 0.010000005), (0.50062376, 0.07439297), (0.45815143, 0.045447074), (0.45783997, 0.15915674), (0.4578461, 0.13), (0.82606816, 0.97208667), (0.82606816, 1), (0.6725242, 0.9999999), (0.6725242, 0.97208655), (0.25, 0.49), (0.21746422, 0.47119805), (0.22987038, 0.41113415), (0.27772036, 0.47398674), (0.21746422, 0.47119805), (0.06878876, 0.38536987), (0.11683357, 0.34551942), (0.22987038, 0.41113415), (0.06878876, 0.38536987), (0.042153895, 0.37), (0.04216574, 0.32888913), (0.11683357, 0.34551942), (0.27772036, 0.47398674), (0.22987038, 0.41113415), (0.28473783, 0.3322272), (0.42192322, 0.39081877), (0.22987038, 0.41113415), (0.11683357, 0.34551942), (0.15902418, 0.2584881), (0.28473783, 0.3322272), (0.11683357, 0.34551942), (0.04216574, 0.32888913), (0.04209689, 0.16326973), (0.15902418, 0.2584881), (0.42192322, 0.39081877), (0.28473783, 0.3322272), (0.31445217, 0.2874208), (0.4578461, 0.37), (0.28473783, 0.3322272), (0.15902418, 0.2584881), (0.18537101, 0.21261497), (0.31445217, 0.2874208), (0.15902418, 0.2584881), (0.04209689, 0.16326973), (0.042153895, 0.13), (0.18537101, 0.21261497), (0.4578461, 0.37), (0.31445217, 0.2874208), (0.34033364, 0.2408682), (0.45788267, 0.33150604), (0.31445217, 0.2874208), (0.18537101, 0.21261497), (0.2139663, 0.16798836), (0.34033364, 0.2408682), (0.18537101, 0.21261497), (0.042153895, 0.13), (0.075561665, 0.11067184), (0.2139663, 0.16798836), (0.45788267, 0.33150604), (0.34033364, 0.2408682), (0.38358158, 0.15135035), (0.45783997, 0.15915674), (0.34033364, 0.2408682), (0.2139663, 0.16798836), (0.27122018, 0.085881285), (0.38358158, 0.15135035), (0.2139663, 0.16798836), (0.075561665, 0.11067184), (0.22507687, 0.024398789), (0.27122018, 0.085881285), (0.45783997, 0.15915674), (0.38358158, 0.15135035), (0.43245786, 0.11536034), (0.4578461, 0.13), (0.38358158, 0.15135035), (0.27122018, 0.085881285), (0.28243956, 0.028744696), (0.43245786, 0.11536034), (0.27122018, 0.085881285), (0.22507687, 0.024398789), (0.25, 0.010000005), (0.28243956, 0.028744696), (0.4578461, 0.13), (0.45518255, 0.09036687), (0.45815143, 0.045447074), (0.50062376, 0.07439297), (0.22168487, -0.006000102), (0.4779278, 0.14199905), (0.52961355, 0.17185657), (0.1741734, -0.03386363), (0.25, 0.010000005), (0.22168487, -0.006000102), (0.1741734, -0.03386363), (0.24094474, -0.056260943), (-0.011831244, 0.16446343), (0.27009797, -0.0013636923), (0.32309312, -0.032927085), (-0.01603846, 0.16254188), (0.042153895, 0.13), (-0.011831244, 0.16446343), (-0.01603846, 0.16254188), (-0.017199073, 0.1350687), (0.04584645, 0.4141225), (0.04287144, 0.111757666), (0.04250547, 0.019910902), (0.054906465, 0.35537413), (0.042153895, 0.37), (0.04584645, 0.4141225), (0.054906465, 0.35537413), (0.010889353, 0.3885752), (0.3126518, 0.5196157), (0.0072245854, 0.34722206), (-0.010954586, 0.34717217), (0.32571316, 0.53401035), (0.25, 0.49), (0.3126518, 0.5196157), (0.32571316, 0.53401035), (0.22230878, 0.53939605), (0.51748633, 0.32924604), (0.20892806, 0.5089783), (0.19918323, 0.5207725), (0.51198274, 0.3399912), (0.4578461, 0.37), (0.51748633, 0.32924604), (0.51198274, 0.3399912), (0.5164692, 0.36887103), (0.27009797, -0.0013636923), (0.25, 0.010000005), (0.24094474, -0.056260943), (0.32309312, -0.032927085), (0.04287144, 0.111757666), (0.042153895, 0.13), (-0.017199073, 0.1350687), (0.04250547, 0.019910902), (0.45738223, 0.40175647), (0.4578461, 0.37), (0.5164692, 0.36887103), (0.45818213, 0.45623502), (0.4779278, 0.14199905), (0.4578461, 0.13), (0.50062376, 0.07439297), (0.52961355, 0.17185657), (0.0072245854, 0.34722206), (0.042153895, 0.37), (0.010889353, 0.3885752), (-0.010954586, 0.34717217), (0.20892806, 0.5089783), (0.25, 0.49), (0.22230878, 0.53939605), (0.19918323, 0.5207725), (0.45518255, 0.09036687), (0.45738223, 0.40175647), (0.45818213, 0.45623502), (0.45815143, 0.045447074), (0.7497163, 0.48851305), (0.72488284, 0.5047002), (1.0022624, 0.3446206), (0.9562439, 0.36931983), (0.9578461, 0.13), (0.97116387, 0.13768476), (0.95702314, 0.13108215), (0.7296834, -0.0017335453), (0.7505551, 0.011501268), (0.95702314, 0.13108215), (0.97116387, 0.13768476), (0.75, 0.010000005), (0.76339674, 0.0022620014), (0.7505551, 0.011501268), (0.50124776, 0.1535065), (0.5437373, 0.13025667), (0.7505551, 0.011501268), (0.76339674, 0.0022620014), (0.5421539, 0.13), (0.54214305, 0.12064929), (0.5437373, 0.13025667), (0.54214835, 0.40459013), (0.54221207, 0.3669112), (0.5437373, 0.13025667), (0.54214305, 0.12064929), (0.5421539, 0.37), (0.519667, 0.35724613), (0.54221207, 0.3669112), (0.75, 0.49), (0.95784605, 0.37), (0.9578461, 0.37), (0.75, 0.49), (0.75, 0.49), (0.72488284, 0.5047002), (0.7497163, 0.48851305), (0.9578461, 0.13), (0.75, 0.010000005), (0.75, 0.010000005), (0.95784616, 0.13), (0.9578461, 0.37), (0.9578532, 0.39244226), (0.9562439, 0.36931983), (0.95784605, 0.13), (0.75, 0.010000005), (0.75, 0.010000005), (0.9578461, 0.13), (0.78965163, 0.5130012), (0.7497163, 0.48851305), (0.54221207, 0.3669112), (0.519667, 0.35724613), (0.9578461, 0.37), (0.9578461, 0.13), (0.95784616, 0.13), (0.9578461, 0.37000003), (0.5421539, 0.37), (0.75, 0.49), (0.74999994, 0.48999995), (0.5421539, 0.37), (0.95784605, 0.37), (0.95784605, 0.13), (0.9578461, 0.13), (0.9578461, 0.37), (0.5421539, 0.13), (0.5421539, 0.37), (0.5421539, 0.37), (0.5421539, 0.13), (0.7497163, 0.48851305), (0.78965163, 0.5130012), (0.75, 0.49), (0.7497163, 0.48851305), (0.9562439, 0.36931983), (0.95233065, 0.36684838), (0.75000876, 0.48378393), (0.5437373, 0.13025667), (0.54221207, 0.3669112), (0.5474017, 0.36647204), (0.54768443, 0.13315324), (0.54221207, 0.3669112), (0.7497163, 0.48851305), (0.75000876, 0.48378393), (0.5474017, 0.36647204), (0.7505551, 0.011501268), (0.5437373, 0.13025667), (0.54768443, 0.13315324), (0.7500659, 0.016307713), (0.95702314, 0.13108215), (0.7505551, 0.011501268), (0.7500659, 0.016307713), (0.95245993, 0.13320422), (0.9578461, 0.13), (0.75, 0.010000005), (0.5421539, 0.13), (0.9578461, 0.37), (0.9578461, 0.37), (0.5421539, 0.13), (0.5421539, 0.37), (0.75, 0.49), (0.54215384, 0.13), (0.5421539, 0.37), (0.5421539, 0.37), (0.5421539, 0.13), (0.9578461, 0.37000003), (0.95784616, 0.13), (0.95784605, 0.13), (0.95784605, 0.37), (0.95784616, 0.13), (0.75, 0.010000005), (0.75, 0.010000005), (0.95784605, 0.13), (0.74999994, 0.48999995), (0.9578461, 0.37000003), (0.95784605, 0.37), (0.75, 0.49), (0.75, 0.010000005), (0.54215384, 0.13), (0.5421539, 0.13), (0.75, 0.010000005), (0.5421539, 0.37), (0.74999994, 0.48999995), (0.75, 0.49), (0.5421539, 0.37)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "catmullClark"
                custom string userProperties:blenderName:data = "Cylinder.001"
                float3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0.01268314113730921)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Scope "Looks"
            {
                def Material "copper"
                {
                    token outputs:displacement.connect = </World/Prefabs/bolt/Looks/copper/Shader.outputs:displacement>
                    token outputs:surface.connect = </World/Prefabs/bolt/Looks/copper/Shader.outputs:surface>

                    def Shader "Shader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        float inputs:clearcoat = 0 (
                            customData = {
                                float default = 0
                                dictionary range = {
                                    float max = 1
                                    float min = 0
                                }
                            }
                            hidden = false
                        )
                        float inputs:clearcoatRoughness = 0.01 (
                            customData = {
                                float default = 0.01
                                dictionary range = {
                                    float max = 1
                                    float min = 0
                                }
                            }
                            hidden = false
                        )
                        color3f inputs:diffuseColor = (1, 0.7243665, 0.20462048) (
                            customData = {
                                float3 default = (0.18, 0.18, 0.18)
                            }
                            hidden = false
                            renderType = "color"
                        )
                        float inputs:displacement = 0 (
                            customData = {
                                float default = 0
                            }
                            hidden = false
                        )
                        color3f inputs:emissiveColor = (0, 0, 0) (
                            customData = {
                                float3 default = (0, 0, 0)
                            }
                            hidden = false
                            renderType = "color"
                        )
                        float inputs:ior = 1.5 (
                            customData = {
                                float default = 1.5
                                dictionary range = {
                                    float max = 3.4028235e38
                                    float min = 0
                                }
                                dictionary soft_range = {
                                    float max = 5
                                    float min = 1
                                }
                            }
                            hidden = false
                        )
                        float inputs:metallic = 1 (
                            customData = {
                                float default = 0
                                dictionary range = {
                                    float max = 1
                                    float min = 0
                                }
                            }
                            hidden = false
                        )
                        normal3f inputs:normal = (0, 0, 1) (
                            customData = {
                                float3 default = (0, 0, 1)
                                dictionary range = {
                                    float3 max = (1, 1, 1)
                                    float3 min = (-1, -1, -1)
                                }
                            }
                            hidden = false
                        )
                        float inputs:opacity = 1 (
                            customData = {
                                float default = 1
                                dictionary range = {
                                    float max = 1
                                    float min = 0
                                }
                            }
                            hidden = false
                        )
                        float inputs:opacityThreshold = 0 (
                            connectability = "interfaceOnly"
                            customData = {
                                float default = 0
                                dictionary range = {
                                    float max = 1
                                    float min = 0
                                }
                            }
                            hidden = false
                        )
                        float inputs:roughness = 0.26999998 (
                            customData = {
                                float default = 0.5
                                dictionary range = {
                                    float max = 1
                                    float min = 0
                                }
                            }
                            hidden = false
                        )
                        color3f inputs:specularColor = (0, 0, 0) (
                            customData = {
                                float3 default = (0, 0, 0)
                            }
                            hidden = false
                            renderType = "color"
                        )
                        int inputs:useSpecularWorkflow = 0 (
                            connectability = "interfaceOnly"
                            customData = {
                                int default = 0
                                dictionary range = {
                                    int max = 1
                                    int min = 0
                                }
                                string widgetType = "checkBox"
                            }
                            hidden = false
                        )
                        token outputs:displacement (
                            renderType = "material"
                        )
                        token outputs:surface (
                            renderType = "material"
                        )
                    }
                }
            }
        }

        def Xform "washer" (
            kind = "subcomponent"
        )
        {
            custom string userProperties:blenderName:object = "washer"
            float3 xformOp:rotateXYZ = (0, 0, 0)
            float3 xformOp:scale = (100, 100, 100)
            double3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

            def Mesh "washer" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float3[] extent = [(-0.0174625, -0.0174625, 0), (0.0174625, 0.0174625, 0.0026102306)]
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
                int[] faceVertexIndices = [53, 55, 8, 4, 0, 4, 5, 1, 45, 22, 18, 44, 2, 6, 7, 3, 55, 48, 12, 8, 4, 8, 9, 5, 46, 26, 22, 45, 6, 10, 11, 7, 48, 52, 16, 12, 8, 12, 13, 9, 40, 2, 30, 47, 10, 14, 15, 11, 52, 50, 20, 16, 12, 16, 17, 13, 41, 6, 2, 40, 14, 18, 19, 15, 50, 54, 24, 20, 16, 20, 21, 17, 39, 38, 25, 29, 18, 22, 23, 19, 54, 51, 28, 24, 20, 24, 25, 21, 43, 14, 10, 42, 22, 26, 27, 23, 51, 49, 0, 28, 24, 28, 29, 25, 42, 10, 6, 41, 26, 30, 31, 27, 28, 0, 1, 29, 49, 53, 4, 0, 30, 2, 3, 31, 44, 18, 14, 43, 17, 36, 35, 13, 9, 34, 33, 5, 13, 35, 34, 9, 47, 46, 38, 39, 5, 33, 32, 1, 1, 32, 39, 29, 25, 38, 37, 21, 21, 37, 36, 17, 30, 26, 46, 47, 36, 44, 43, 35, 34, 42, 41, 33, 35, 43, 42, 34, 33, 41, 40, 32, 32, 40, 47, 39, 38, 46, 45, 37, 37, 45, 44, 36, 57, 61, 53, 49, 59, 57, 49, 51, 62, 59, 51, 54, 58, 62, 54, 50, 60, 58, 50, 52, 56, 60, 52, 48, 63, 56, 48, 55, 61, 63, 55, 53, 7, 11, 63, 61, 11, 15, 56, 63, 15, 19, 60, 56, 19, 23, 58, 60, 23, 27, 62, 58, 27, 31, 59, 62, 31, 3, 57, 59, 3, 7, 61, 57]
                rel material:binding = </World/Prefabs/washer/Looks/copper> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                normal3f[] normals = [(0.70710677, 0.70710677, 0), (-3.0803932e-8, 1, 0), (3.192741e-9, 0.7763821, 0.6302625), (0.54898506, 0.54898506, 0.6302625), (1.0131474e-8, 0, 1), (1.0131474e-8, 0, 1), (1.0131474e-8, 0, 1), (1.0131474e-8, 0, 1), (0.7070799, 0.7070798, 0.008731602), (0.42261973, 0.42261964, -0.8017389), (0.5976744, -1.2248161e-8, -0.8017389), (0.9999619, -3.0803754e-8, 0.0087313), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-3.0803932e-8, 1, 0), (-0.7071068, 0.70710665, 0), (-0.5489851, 0.5489849, 0.6302625), (3.192741e-9, 0.7763821, 0.6302625), (-1.0131477e-8, 0, 1), (-1.0131477e-8, 0, 1), (-1.0131477e-8, 0, 1), (-1.0131477e-8, 0, 1), (1.4375085e-7, 0.9999618, 0.008732004), (7.3489005e-8, 0.59767485, -0.80173856), (0.42261973, 0.42261964, -0.8017389), (0.7070799, 0.7070798, 0.008731602), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.7071068, 0.70710665, 0), (-1, -4.1071903e-8, 0), (-0.7763821, -9.566247e-8, 0.6302624), (-0.5489851, 0.5489849, 0.6302625), (2.0262945e-8, 0, 1), (2.0262945e-8, 0, 1), (2.0262945e-8, 0, 1), (2.0262945e-8, 0, 1), (-0.999962, 7.187545e-8, 0.008731268), (-0.5976743, 3.674448e-8, -0.801739), (-0.42261967, 0.42261982, -0.80173874), (-0.70707977, 0.70708, 0.008731651), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (-1, -4.1071903e-8, 0), (-0.7071068, -0.70710665, 0), (-0.5489851, -0.548985, 0.6302625), (-0.7763821, -9.566247e-8, 0.6302624), (1.013148e-8, 0, 1), (1.013148e-8, 0, 1), (1.013148e-8, 0, 1), (1.013148e-8, 0, 1), (-0.7070799, -0.7070799, 0.008731464), (-0.42261973, -0.42261973, -0.8017388), (-0.5976743, 3.674448e-8, -0.801739), (-0.999962, 7.187545e-8, 0.008731268), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.7071068, -0.70710665, 0), (-1.3348371e-7, -1, 0), (-8.610423e-8, -0.7763821, 0.63026255), (-0.5489851, -0.548985, 0.6302625), (-1.0131478e-8, 0, 0.99999994), (-1.0131478e-8, 0, 0.99999994), (-1.0131478e-8, 0, 0.99999994), (-1.0131478e-8, 0, 0.99999994), (-0.70707965, 0.70708007, 0.008731469), (1.7455466e-7, 0.9999619, 0.008731367), (1.0948158e-7, 0.5910779, 0.8066144), (-0.41795504, 0.4179552, 0.8066145), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1.3348371e-7, -1, 0), (0.7071066, -0.70710695, 0), (0.54898494, -0.54898524, 0.6302625), (-8.610423e-8, -0.7763821, 0.63026255), (1.01314725e-8, 0, 1), (1.01314725e-8, 0, 1), (1.01314725e-8, 0, 1), (1.01314725e-8, 0, 1), (0.70707995, -0.70707977, 0.008731799), (0.4226198, -0.4226197, -0.8017388), (0, -0.5976748, -0.8017386), (-1.0267918e-8, -0.9999618, 0.008731938), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0.7071066, -0.70710695, 0), (1, -1.4375169e-7, 0), (0.7763821, -1.4349374e-7, 0.6302624), (0.54898494, -0.54898524, 0.6302625), (-3.039444e-8, 0, 1), (-3.039444e-8, 0, 1), (-3.039444e-8, 0, 1), (-3.039444e-8, 0, 1), (-1.0267918e-8, -0.9999618, 0.008731938), (0, -0.5976748, -0.8017386), (-0.42261973, -0.42261973, -0.8017388), (-0.7070799, -0.7070799, 0.008731464), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1.013147e-8, 0, 1), (1.013147e-8, 0, 1), (1.013147e-8, 0, 1), (1.013147e-8, 0, 1), (1, -1.4375169e-7, 0), (0.70710677, 0.70710677, 0), (0.54898506, 0.54898506, 0.6302625), (0.7763821, -1.4349374e-7, 0.6302624), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.9999619, -3.0803754e-8, 0.0087313), (0.5976744, -1.2248161e-8, -0.8017389), (0.4226198, -0.4226197, -0.8017388), (0.70707995, -0.70707977, 0.008731799), (0.5910779, -4.8658475e-8, 0.8066144), (0.9999619, -6.160752e-8, 0.008731416), (0.70708, -0.7070798, 0.008731147), (0.41795537, -0.41795528, 0.80661434), (3.6493855e-8, -0.59107786, 0.8066144), (2.0535841e-8, -0.9999619, 0.0087313), (-0.7070799, -0.7070799, 0.008731593), (-0.41795507, -0.41795513, 0.80661464), (0.41795537, -0.41795528, 0.80661434), (0.70708, -0.7070798, 0.008731147), (2.0535841e-8, -0.9999619, 0.0087313), (3.6493855e-8, -0.59107786, 0.8066144), (-0.70707977, 0.70708, 0.008731651), (1.4375085e-7, 0.9999618, 0.008732004), (1.7455466e-7, 0.9999619, 0.008731367), (-0.70707965, 0.70708007, 0.008731469), (-0.41795507, -0.41795513, 0.80661464), (-0.7070799, -0.7070799, 0.008731593), (-0.9999619, 8.214337e-8, 0.00873145), (-0.59107786, 4.8658475e-8, 0.8066145), (-0.59107786, 4.8658475e-8, 0.8066145), (-0.9999619, 8.214337e-8, 0.00873145), (-0.70707965, 0.70708007, 0.008731469), (-0.41795504, 0.4179552, 0.8066145), (1.0948158e-7, 0.5910779, 0.8066144), (1.7455466e-7, 0.9999619, 0.008731367), (0.70708, 0.70707977, 0.008731326), (0.4179553, 0.41795513, 0.8066144), (0.4179553, 0.41795513, 0.8066144), (0.70708, 0.70707977, 0.008731326), (0.9999619, -6.160752e-8, 0.008731416), (0.5910779, -4.8658475e-8, 0.8066144), (-0.42261967, 0.42261982, -0.80173874), (7.3489005e-8, 0.59767485, -0.80173856), (1.4375085e-7, 0.9999618, 0.008732004), (-0.70707977, 0.70708, 0.008731651), (0.9999619, -6.160752e-8, 0.008731416), (0.9999619, -3.0803754e-8, 0.0087313), (0.70707995, -0.70707977, 0.008731799), (0.70708, -0.7070798, 0.008731147), (2.0535841e-8, -0.9999619, 0.0087313), (-1.0267918e-8, -0.9999618, 0.008731938), (-0.7070799, -0.7070799, 0.008731464), (-0.7070799, -0.7070799, 0.008731593), (0.70708, -0.7070798, 0.008731147), (0.70707995, -0.70707977, 0.008731799), (-1.0267918e-8, -0.9999618, 0.008731938), (2.0535841e-8, -0.9999619, 0.0087313), (-0.7070799, -0.7070799, 0.008731593), (-0.7070799, -0.7070799, 0.008731464), (-0.999962, 7.187545e-8, 0.008731268), (-0.9999619, 8.214337e-8, 0.00873145), (-0.9999619, 8.214337e-8, 0.00873145), (-0.999962, 7.187545e-8, 0.008731268), (-0.70707977, 0.70708, 0.008731651), (-0.70707965, 0.70708007, 0.008731469), (1.7455466e-7, 0.9999619, 0.008731367), (1.4375085e-7, 0.9999618, 0.008732004), (0.7070799, 0.7070798, 0.008731602), (0.70708, 0.70707977, 0.008731326), (0.70708, 0.70707977, 0.008731326), (0.7070799, 0.7070798, 0.008731602), (0.9999619, -3.0803754e-8, 0.0087313), (0.9999619, -6.160752e-8, 0.008731416), (1, -1.2321573e-7, 0), (0.70710677, 0.70710677, 0), (0.70710677, 0.70710677, 0), (1, -1.4375169e-7, 0), (0.7071066, -0.70710695, 0), (1, -1.2321573e-7, 0), (1, -1.4375169e-7, 0), (0.7071066, -0.70710695, 0), (-1.6428763e-7, -1, 0), (0.7071066, -0.70710695, 0), (0.7071066, -0.70710695, 0), (-1.3348371e-7, -1, 0), (-0.7071068, -0.70710665, 0), (-1.6428763e-7, -1, 0), (-1.3348371e-7, -1, 0), (-0.7071068, -0.70710665, 0), (-1, 5.1339878e-8, 0), (-0.7071068, -0.70710665, 0), (-0.7071068, -0.70710665, 0), (-1, -4.1071903e-8, 0), (-0.70710677, 0.70710677, 0), (-1, 5.1339878e-8, 0), (-1, -4.1071903e-8, 0), (-0.7071068, 0.70710665, 0), (-6.1607864e-8, 1, 0), (-0.70710677, 0.70710677, 0), (-0.7071068, 0.70710665, 0), (-3.0803932e-8, 1, 0), (0.70710677, 0.70710677, 0), (-6.1607864e-8, 1, 0), (-3.0803932e-8, 1, 0), (0.70710677, 0.70710677, 0), (0.54898506, 0.54898506, -0.6302625), (-4.7831243e-8, 0.7763821, -0.6302624), (-6.1607864e-8, 1, 0), (0.70710677, 0.70710677, 0), (-4.7831243e-8, 0.7763821, -0.6302624), (-0.5489851, 0.54898506, -0.6302625), (-0.70710677, 0.70710677, 0), (-6.1607864e-8, 1, 0), (-0.5489851, 0.54898506, -0.6302625), (-0.7763821, 4.7831236e-8, -0.6302624), (-1, 5.1339878e-8, 0), (-0.70710677, 0.70710677, 0), (-0.7763821, 4.7831236e-8, -0.6302624), (-0.5489851, -0.548985, -0.6302625), (-0.7071068, -0.70710665, 0), (-1, 5.1339878e-8, 0), (-0.5489851, -0.548985, -0.6302625), (-1.2754997e-7, -0.7763821, -0.6302624), (-1.6428763e-7, -1, 0), (-0.7071068, -0.70710665, 0), (-1.2754997e-7, -0.7763821, -0.6302624), (0.54898494, -0.54898524, -0.6302625), (0.7071066, -0.70710695, 0), (-1.6428763e-7, -1, 0), (0.54898494, -0.54898524, -0.6302625), (0.7763821, -1.11606234e-7, -0.6302624), (1, -1.2321573e-7, 0), (0.7071066, -0.70710695, 0), (0.7763821, -1.11606234e-7, -0.6302624), (0.54898506, 0.54898506, -0.6302625), (0.70710677, 0.70710677, 0), (1, -1.2321573e-7, 0)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(0.0174625, 0, 0.0026102306), (0.0071437503, 0, 0.0026102306), (0.007120958, -1.9543256e-12, 0), (0.0174625, 0, 0), (0.012347851, 0.012347853, 0.0026102306), (0.005051394, 0.0050513945, 0.0026102306), (0.0050352775, 0.0050352784, 0), (0.012347851, 0.012347853, 0), (1.3183821e-9, 0.0174625, 0.0026102306), (5.3933813e-10, 0.0071437503, 0.0026102306), (5.3657e-10, 0.0071209585, 0), (1.3183821e-9, 0.0174625, 0), (-0.012347855, 0.012347848, 0.0026102306), (-0.0050513954, 0.005051393, 0.0026102306), (-0.0050352793, 0.005035277, 0), (-0.012347855, 0.012347848, 0), (-0.0174625, 1.5266202e-9, 0.0026102306), (-0.0071437503, 6.245265e-10, 0.0026102306), (-0.007120958, 6.205796e-10, 0), (-0.0174625, 1.5266202e-9, 0), (-0.012347855, -0.012347848, 0.0026102306), (-0.0050513954, -0.005051393, 0.0026102306), (-0.0050352793, -0.005035277, 0), (-0.012347855, -0.012347848, 0), (1.3183821e-9, -0.0174625, 0.0026102306), (5.3933813e-10, -0.0071437503, 0.0026102306), (5.3657e-10, -0.0071209585, 0), (1.3183821e-9, -0.0174625, 0), (0.012347845, -0.012347858, 0.0026102306), (0.0050513917, -0.0050513973, 0.0026102306), (0.0050352756, -0.0050352807, 0), (0.012347845, -0.012347858, 0), (0.007139852, -3.3429254e-13, 0.0021637438), (0.0050486373, 0.0050486377, 0.0021637438), (5.388646e-10, 0.007139852, 0.0021637438), (-0.0050486387, 0.0050486363, 0.0021637438), (-0.007139852, 6.2385136e-10, 0.0021637438), (-0.0050486387, -0.0050486363, 0.0021637438), (5.388646e-10, -0.007139852, 0.0021637438), (0.005048635, -0.0050486405, 0.0021637438), (0.007123917, -1.7006045e-12, 0.0003388743), (0.0050373697, 0.0050373706, 0.0003388743), (5.369294e-10, 0.0071239173, 0.0003388743), (-0.0050373715, 0.005037369, 0.0003388743), (-0.007123917, 6.21092e-10, 0.0003388743), (-0.0050373715, -0.005037369, 0.0003388743), (5.369294e-10, -0.0071239173, 0.0003388743), (0.005037368, -0.005037373, 0.0003388743), (-0.012347855, 0.012347848, 0.0024006083), (0.0174625, 0, 0.0024006083), (-0.012347855, -0.012347848, 0.0024006083), (0.012347845, -0.012347858, 0.0024006083), (-0.0174625, 1.5266202e-9, 0.0024006083), (0.012347851, 0.012347853, 0.0024006083), (1.3183821e-9, -0.0174625, 0.0024006083), (1.3183821e-9, 0.0174625, 0.0024006083), (-0.012347855, 0.012347848, 0.0001900593), (0.0174625, 0, 0.0001900593), (-0.012347855, -0.012347848, 0.0001900593), (0.012347845, -0.012347858, 0.0001900593), (-0.0174625, 1.5266202e-9, 0.0001900593), (0.012347851, 0.012347853, 0.0001900593), (1.3183821e-9, -0.0174625, 0.0001900593), (1.3183821e-9, 0.0174625, 0.0001900593)]
                bool[] primvars:sharp_face = [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                    interpolation = "uniform"
                )
                texCoord2f[] primvars:st = [(0.625, 0.63989735), (0.75, 0.63989735), (0.75, 0.6666667), (0.625, 0.6666667), (0.5, 0.6666667), (0.625, 0.6666667), (0.625, 0.8333333), (0.5, 0.8333333), (0.12500045, 0.253217), (0.125, 0.16666667), (0, 0.16666667), (0.0000110580395, 0.25321698), (0.5, 0.16666667), (0.625, 0.16666667), (0.625, 0.33333334), (0.5, 0.33333334), (0.75, 0.63989735), (0.875, 0.63989735), (0.875, 0.6666667), (0.75, 0.6666667), (0.625, 0.6666667), (0.75, 0.6666667), (0.75, 0.8333333), (0.625, 0.8333333), (0.25, 0.25321698), (0.25, 0.16666667), (0.125, 0.16666667), (0.12500045, 0.253217), (0.625, 0.16666667), (0.75, 0.16666667), (0.75, 0.33333334), (0.625, 0.33333334), (0.875, 0.63989735), (1, 0.63989735), (1, 0.6666667), (0.875, 0.6666667), (0.75, 0.6666667), (0.875, 0.6666667), (0.875, 0.8333333), (0.75, 0.8333333), (0.5, 0.25321692), (0.5, 0.16666667), (0.375, 0.16666667), (0.37500003, 0.25321698), (0.75, 0.16666667), (0.875, 0.16666667), (0.875, 0.33333334), (0.75, 0.33333334), (0, 0.63989735), (0.125, 0.63989735), (0.125, 0.6666667), (0, 0.6666667), (0.875, 0.6666667), (1, 0.6666667), (1, 0.8333333), (0.875, 0.8333333), (0.62500006, 0.25321695), (0.625, 0.16666667), (0.5, 0.16666667), (0.5, 0.25321692), (0.875, 0.16666667), (1, 0.16666667), (1, 0.33333334), (0.875, 0.33333334), (0.125, 0.63989735), (0.25, 0.63989735), (0.25, 0.6666667), (0.125, 0.6666667), (0, 0.6666667), (0.125, 0.6666667), (0.125, 0.8333333), (0, 0.8333333), (0.37500006, 0.71929836), (0.25, 0.71929824), (0.25, 0.8333333), (0.375, 0.8333333), (0, 0.16666667), (0.125, 0.16666667), (0.125, 0.33333334), (0, 0.33333334), (0.25, 0.63989735), (0.375, 0.63989735), (0.375, 0.6666667), (0.25, 0.6666667), (0.125, 0.6666667), (0.25, 0.6666667), (0.25, 0.8333333), (0.125, 0.8333333), (0.8749995, 0.25321698), (0.875, 0.16666667), (0.75, 0.16666667), (0.75000006, 0.25321698), (0.125, 0.16666667), (0.25, 0.16666667), (0.25, 0.33333334), (0.125, 0.33333334), (0.375, 0.63989735), (0.5, 0.63989735), (0.5, 0.6666667), (0.375, 0.6666667), (0.25, 0.6666667), (0.375, 0.6666667), (0.375, 0.8333333), (0.25, 0.8333333), (0.75000006, 0.25321698), (0.75, 0.16666667), (0.625, 0.16666667), (0.62500006, 0.25321695), (0.25, 0.16666667), (0.375, 0.16666667), (0.375, 0.33333334), (0.25, 0.33333334), (0.375, 0.6666667), (0.5, 0.6666667), (0.5, 0.8333333), (0.375, 0.8333333), (0.5, 0.63989735), (0.625, 0.63989735), (0.625, 0.6666667), (0.5, 0.6666667), (0.375, 0.16666667), (0.5, 0.16666667), (0.5, 0.33333334), (0.375, 0.33333334), (0.99998885, 0.25321695), (1, 0.16666667), (0.875, 0.16666667), (0.8749995, 0.25321698), (1, 0.8333333), (1.0000197, 0.71929824), (0.875, 0.7192983), (0.875, 0.8333333), (0.75, 0.8333333), (0.75, 0.71929824), (0.625, 0.71929836), (0.625, 0.8333333), (0.875, 0.8333333), (0.875, 0.7192983), (0.75, 0.71929824), (0.75, 0.8333333), (0.37500003, 0.25321698), (0.25, 0.25321698), (0.25, 0.71929824), (0.37500006, 0.71929836), (0.625, 0.8333333), (0.625, 0.71929836), (0.5, 0.7192983), (0.5, 0.8333333), (0.5, 0.8333333), (0.5, 0.7192983), (0.37500006, 0.71929836), (0.375, 0.8333333), (0.25, 0.8333333), (0.25, 0.71929824), (0.125, 0.71929836), (0.125, 0.8333333), (0.125, 0.8333333), (0.125, 0.71929836), (-0.00001968717, 0.71929824), (0, 0.8333333), (0.375, 0.16666667), (0.25, 0.16666667), (0.25, 0.25321698), (0.37500003, 0.25321698), (1.0000197, 0.71929824), (0.99998885, 0.25321695), (0.8749995, 0.25321698), (0.875, 0.7192983), (0.75, 0.71929824), (0.75000006, 0.25321698), (0.62500006, 0.25321695), (0.625, 0.71929836), (0.875, 0.7192983), (0.8749995, 0.25321698), (0.75000006, 0.25321698), (0.75, 0.71929824), (0.625, 0.71929836), (0.62500006, 0.25321695), (0.5, 0.25321692), (0.5, 0.7192983), (0.5, 0.7192983), (0.5, 0.25321692), (0.37500003, 0.25321698), (0.37500006, 0.71929836), (0.25, 0.71929824), (0.25, 0.25321698), (0.12500045, 0.253217), (0.125, 0.71929836), (0.125, 0.71929836), (0.12500045, 0.253217), (0.0000110580395, 0.25321698), (-0.00001968717, 0.71929824), (0.5, 0.35760444), (0.625, 0.35760444), (0.625, 0.63989735), (0.5, 0.63989735), (0.375, 0.35760444), (0.5, 0.35760444), (0.5, 0.63989735), (0.375, 0.63989735), (0.25, 0.35760444), (0.375, 0.35760444), (0.375, 0.63989735), (0.25, 0.63989735), (0.125, 0.35760447), (0.25, 0.35760444), (0.25, 0.63989735), (0.125, 0.63989735), (0, 0.35760444), (0.125, 0.35760447), (0.125, 0.63989735), (0, 0.63989735), (0.875, 0.3576044), (1, 0.3576044), (1, 0.63989735), (0.875, 0.63989735), (0.75, 0.35760447), (0.875, 0.3576044), (0.875, 0.63989735), (0.75, 0.63989735), (0.625, 0.35760444), (0.75, 0.35760447), (0.75, 0.63989735), (0.625, 0.63989735), (0.625, 0.33333334), (0.75, 0.33333334), (0.75, 0.35760447), (0.625, 0.35760444), (0.75, 0.33333334), (0.875, 0.33333334), (0.875, 0.3576044), (0.75, 0.35760447), (0.875, 0.33333334), (1, 0.33333334), (1, 0.3576044), (0.875, 0.3576044), (0, 0.33333334), (0.125, 0.33333334), (0.125, 0.35760447), (0, 0.35760444), (0.125, 0.33333334), (0.25, 0.33333334), (0.25, 0.35760444), (0.125, 0.35760447), (0.25, 0.33333334), (0.375, 0.33333334), (0.375, 0.35760444), (0.25, 0.35760444), (0.375, 0.33333334), (0.5, 0.33333334), (0.5, 0.35760444), (0.375, 0.35760444), (0.5, 0.33333334), (0.625, 0.33333334), (0.625, 0.35760444), (0.5, 0.35760444)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "catmullClark"
                custom string userProperties:blenderName:data = "washer"
            }

            def Scope "Looks"
            {
                def Material "copper"
                {
                    token outputs:displacement.connect = </World/Prefabs/washer/Looks/copper/Shader.outputs:displacement>
                    token outputs:surface.connect = </World/Prefabs/washer/Looks/copper/Shader.outputs:surface>
                    custom uniform bool paused = 0 (
                        customData = {
                            bool nonpersistant = 1
                        }
                        hidden = true
                    )

                    def Shader "Shader"
                    {
                        reorder properties = ["inputs:diffuseColor", "inputs:emissiveColor", "inputs:useSpecularWorkflow", "inputs:specularColor", "inputs:metallic", "inputs:roughness", "inputs:clearcoat", "inputs:clearcoatRoughness", "inputs:enable_opacity", "inputs:enable_specular_transmission", "inputs:opacity", "inputs:opacityThreshold", "inputs:ior", "inputs:normal", "inputs:displacement", "inputs:occlusion"]
                        uniform token info:id = "UsdPreviewSurface"
                        float inputs:clearcoat = 0 (
                            customData = {
                                float default = 0
                                dictionary range = {
                                    float max = 1
                                    float min = 0
                                }
                            }
                            hidden = false
                        )
                        float inputs:clearcoatRoughness = 0.01 (
                            customData = {
                                float default = 0.01
                                dictionary range = {
                                    float max = 1
                                    float min = 0
                                }
                            }
                            hidden = false
                        )
                        color3f inputs:diffuseColor = (1, 0.7243665, 0.20462048) (
                            customData = {
                                float3 default = (0.18, 0.18, 0.18)
                            }
                            hidden = false
                            renderType = "color"
                        )
                        float inputs:displacement = 0 (
                            customData = {
                                float default = 0
                            }
                            hidden = false
                        )
                        color3f inputs:emissiveColor = (0, 0, 0) (
                            customData = {
                                float3 default = (0, 0, 0)
                            }
                            hidden = false
                            renderType = "color"
                        )
                        bool inputs:enable_opacity = 0 (
                            connectability = "interfaceOnly"
                            customData = {
                                bool default = 0
                            }
                            hidden = true
                        )
                        bool inputs:enable_specular_transmission = 0 (
                            connectability = "interfaceOnly"
                            customData = {
                                bool default = 0
                            }
                            hidden = true
                        )
                        bool inputs:excludeFromWhiteMode = 0 (
                            customData = {
                                bool default = 0
                            }
                            displayGroup = "Material Flags"
                            displayName = "Exclude from White Mode"
                            hidden = false
                        )
                        float inputs:ior = 1.5 (
                            customData = {
                                float default = 1.5
                                dictionary range = {
                                    float max = 3.4028235e38
                                    float min = 0
                                }
                                dictionary soft_range = {
                                    float max = 5
                                    float min = 1
                                }
                            }
                            hidden = false
                        )
                        float inputs:metallic = 1 (
                            customData = {
                                float default = 0
                                dictionary range = {
                                    float max = 1
                                    float min = 0
                                }
                            }
                            hidden = false
                        )
                        normal3f inputs:normal = (0, 0, 1) (
                            customData = {
                                float3 default = (0, 0, 1)
                                dictionary range = {
                                    float3 max = (1, 1, 1)
                                    float3 min = (-1, -1, -1)
                                }
                            }
                            hidden = false
                        )
                        float inputs:opacity = 1 (
                            customData = {
                                float default = 1
                                dictionary range = {
                                    float max = 1
                                    float min = 0
                                }
                            }
                            hidden = false
                        )
                        float inputs:opacityThreshold = 0 (
                            connectability = "interfaceOnly"
                            customData = {
                                float default = 0
                                dictionary range = {
                                    float max = 1
                                    float min = 0
                                }
                            }
                            hidden = false
                        )
                        float inputs:roughness = 0.26999998 (
                            customData = {
                                float default = 0.5
                                dictionary range = {
                                    float max = 1
                                    float min = 0
                                }
                            }
                            hidden = false
                        )
                        color3f inputs:specularColor = (0, 0, 0) (
                            customData = {
                                float3 default = (0, 0, 0)
                            }
                            hidden = false
                            renderType = "color"
                        )
                        int inputs:useSpecularWorkflow = 0 (
                            connectability = "interfaceOnly"
                            customData = {
                                int default = 0
                                dictionary range = {
                                    int max = 1
                                    int min = 0
                                }
                                string widgetType = "checkBox"
                            }
                            hidden = false
                        )
                        token outputs:displacement (
                            renderType = "material"
                        )
                        token outputs:surface (
                            renderType = "material"
                        )
                    }
                }
            }
        }
    }

    def Scope "Geometry"
    {
        def "bolt_01" (
            prepend apiSchemas = ["MaterialBindingAPI"]
            prepend references = </World/Prefabs/bolt>
        )
        {
            rel material:binding = None (
                bindMaterialAs = "weakerThanDescendants"
            )
            float3 xformOp:rotateXYZ = (0, 90, 0)
            float3 xformOp:scale = (100, 100, 100)
            double3 xformOp:translate = (-1.5581433339323267, 6.0000000000000115, 3.496055033870831)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
        }

        def "bolt_02" (
            prepend references = </World/Prefabs/bolt>
        )
        {
            float3 xformOp:rotateXYZ = (0, 90, 0)
            float3 xformOp:scale = (100, 100, 100)
            double3 xformOp:translate = (-1.558143333932326, 4.983093197201176e-15, 3.496055033870831)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
        }

        def "bolt_03" (
            prepend references = </World/Prefabs/bolt>
        )
        {
            float3 xformOp:rotateXYZ = (0, 90, 0)
            float3 xformOp:scale = (100, 100, 100)
            double3 xformOp:translate = (-1.5581433339323254, -6.000000000000001, 3.496055033870831)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
        }

        def "washer_01" (
            prepend references = </World/Prefabs/washer>
        )
        {
            float3 xformOp:rotateXYZ = (0, 90, 0)
            float3 xformOp:scale = (100, 100, 100)
            double3 xformOp:translate = (0.13104469100338373, 6, 3.496055033870831)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
        }

        def "washer_02" (
            prepend references = </World/Prefabs/washer>
        )
        {
            float3 xformOp:rotateXYZ = (0, 90, 0)
            float3 xformOp:scale = (100, 100, 100)
            double3 xformOp:translate = (0.13104469100338373, -3.1086244689504383e-15, 3.496055033870831)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
        }

        def "washer_03" (
            prepend references = </World/Prefabs/washer>
        )
        {
            float3 xformOp:rotateXYZ = (0, 90, 0)
            float3 xformOp:scale = (100, 100, 100)
            double3 xformOp:translate = (0.13104469100338373, -6, 3.496055033870831)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
        }

        def Mesh "plate" (
            prepend apiSchemas = ["MaterialBindingAPI"]
            kind = "subcomponent"
        )
        {
            float3[] extent = [(-50, -50, -50), (50, 50, 50)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 4, 6, 7, 5, 6, 2, 3, 7, 4, 5, 1, 0, 4, 0, 2, 6, 5, 7, 3, 1]
            rel material:binding = </World/Looks/steel> (
                bindMaterialAs = "weakerThanDescendants"
            )
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-50, -50, 50), (50, -50, 50), (-50, 50, 50), (50, 50, 50), (-50, -50, -50), (50, -50, -50), (-50, 50, -50), (50, 50, -50)]
            texCoord2f[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            double3 xformOp:rotateXYZ = (0, 90, 0)
            double3 xformOp:scale = (0.0676467462617866, 0.20962234397496668, -0.0019910602239921558)
            double3 xformOp:translate = (2.8630892513230383e-30, 0, 3.4624269507737724)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
        }
    }
}

